name: Main

on:
    push:
        branches:
            - main
        paths:
            - "**.go"

env:
    GO_VERSION: 1.20.2
    GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

jobs:
    build:
        name: build
        runs-on: ubuntu-latest
        env:
            GOFLAGS: -mod=readonly

        steps:
            - name: Set up Go
              uses: actions/setup-go@v4
              with:
                  go-version: ${{ env.GO_VERSION }}

            - name: Checkout code
              uses: actions/checkout@v4

            - name: Verify Deps
              run: go mod verify

            - name: Build Deps
              run: go mod download

            - name: Ensure project compiles
              run: make build

    test:
        name: Test
        needs: build
        runs-on: ${{ matrix.os }}
        strategy:
            # Fail fast is disabled because there are Go version specific features and tests
            # that should be able to fail independently.
            fail-fast: false
            matrix:
                os: [ubuntu-latest, macos-latest]
        env:
            COVERALLS_PARALLEL: true
            COVERALLS_TOKEN: ${{ secrets.GITHUB_TOKEN }}

        steps:
            - name: Set up Go
              uses: actions/setup-go@v4
              with:
                  go-version: ${{ env.GO_VERSION }}

            - name: Checkout code
              uses: actions/checkout@v4
              with:
                  persist-credentials: false
                  fetch-depth: 0

            - name: Test
              run: |
                  go test -race -covermode atomic -coverprofile=profile.cov ./...

            - name: Install goveralls
              run: go install github.com/mattn/goveralls@latest

            - name: Send coverage
              uses: shogo82148/actions-goveralls@v1
              with:
                  path-to-profile: profile.cov
                  flag-name: Go-${{ matrix.os }}
                  parallel: true

    # notifies that all test jobs are finished.
    finish:
        needs: test
        runs-on: ubuntu-latest
        steps:
            - uses: shogo82148/actions-goveralls@v1
              with:
                  parallel-finished: true

    release:
        name: Create Release
        runs-on: ubuntu-latest
        needs:
            - build
        steps:
            - uses: actions/checkout@v4

            - name: Get Manifest version
              id: manifest-version
              run: |
                  echo "Reading manifest.json from ./manifest.json"
                  PACKAGE_VERSION=$(cat ./manifest.json | jq '.version' | tr -d '"')
                  echo "current-version=$PACKAGE_VERSION" >> $GITHUB_OUTPUT

            - name: Create release
              run: |
                  gh release create ${{ steps.manifest-version.outputs.current-version }} -p --generate-notes
